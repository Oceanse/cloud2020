server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能，利用微服务名称j进行路由
      routes:
        - id: payment-route # 路由的id,没有规定规则但要求唯一,建议配合服务名
          #匹配后提供服务的路由地址，uri的协议为lb，表示启用Gateway的负载均衡功能，Gateway会根据注册中心注册的服务列表，以注册中心上微服务名为路径创建动态路由进行转发，从而实现动态路由的功能
          #uri: http://localhost:8001
          uri: lb://cloud-payment-service
          #添加网关前 - http://localhost:8001/payment/get/1
          #添加网关后 - http://localhost:9527/payment/get/1？uname=ocean, filter添加了认证
          #两者访问成功，返回相同结果，添加网关后就可以只把网关作为服务访问的唯一入口
          predicates:
            - Path=/payment/get/** # 断言，路径相匹配的进行路由
              #- After=2017-01-20T17:42:47.789-07:00[America/Denver]
              #- Before=2017-01-20T17:42:47.789-07:00[America/Denver]
              #- Cookie=username,zzyy
              #- Header=X-Request-Id, \d+ #请求头要有X-Request-Id属性，并且值为正数
              #- Host=**.atguigu.com
              #- Method=GET
              #- Query=username, \d+ # 要有参数名username并且值还要是正整数才能路由
              # 过滤
              #filters:
            #  - AddRequestHeader=X-Request-red, blue
        - id: payment-route2
          #uri: http://localhost:8001
          uri: lb://cloud-payment-service
          #添加网关后: -http://localhost:8001/payment/lb?uname=ocean
          predicates:
            - Path=/payment/lb/** #断言,路径相匹配的进行路由
        - id: sentinel-route
          uri: http://localhost:8401
          predicates:
            - Path=/testA
      default-filters:
        - AddRequestHeader=origin,gateway

eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka/


